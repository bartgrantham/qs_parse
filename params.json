{"name":"Qs parse","body":"# qs_parse #\r\n\r\n## Description ##\r\n\r\nA set of simple and easy functions for parsing URL query strings, such as\r\nthose generated in an HTTP GET form submission.\r\n\r\n\r\n## How to Use ##\r\n\r\nThese qs_* functions can be used in two different ways:\r\n\r\n`qs_parse()`/`qs_k2v()`: A faster version that requires a pre-processing stage\r\nand **is destructive to the query string**\r\n\r\n  * Better for repeated lookups of k/v pairs\r\n  * Does all decoding/processing in-place, so no memory copying\r\n  * Requires an array of pointers to strings to be passed to the preprocessing stage\r\n  * Cannot be used where the query string is const\r\n\r\n`qs_scanvalue()`: A slower version that will scan for the given key and will\r\ndecode the value into a user-provided string\r\n\r\n  * Doesn't alter the query string so can be used where it is const, or cannot be altered\r\n  * Only needs a user-passed char string for copying into\r\n  * Scans the entire qs on each call, so isn't as fast as qs_k2v()\r\n\r\n\r\nSince `qs_parse()`/`qs_k2v()` alters the query string that is passed to it in a way\r\nthat defeats `qs_scanvalue()`, do not mix these two methods (or if you must,\r\neither don't call `qs_scanvalue()` after a call to `qs_parse()` or be sure make\r\na copy of the query string beforehand)\r\n\r\n[note: speed comparisons will be more relevant when the sorting the k/v pairs\r\ncode is implemented]\r\n\r\n\r\n## Installation ##\r\nAll you really need is qs_parse.h and qs_parse.c.  I've included my test program\r\n(\"qs_test.c\") and an example program that shows how to use these functions\r\n(\"qs_example.c\").  Also included is a quick Makefile.  If you want to see it\r\ncome to life just get all the files and:\r\n\r\n    # make\r\n    # ./qs_example\r\n\r\n\r\n## Bugs, etc. ##\r\n\r\nPlease let me know if you find any, or if you have license-friendly enhancements\r\nto add.\r\n\r\n\r\n## License ##\r\n\r\nMIT License.  See ./LICENSE or <http://www.opensource.org/licenses/mit-license.php>\r\n\r\nFew things are more enjoyable than the knowledge that you've helped another\r\nperson. If you do use these functions for anything, I'd love to hear about it:\r\n\r\n<bart@bartgrantham.com>\r\n\r\n\r\nEnjoy!\r\n\r\n-Bart\r\n","tagline":"Simple HTTP query string parsing library in C","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}